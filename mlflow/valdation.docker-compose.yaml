services:
  mlflow-backend-store:
    image: postgres:13.21-alpine3.20
    container_name: mlflow-backend-store
    env_file:
      - ./.env
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  mlflow-server:
    build:
      context: .
      dockerfile: validation.Dockerfile
    container_name: mlflow-server
    depends_on:
      mlflow-backend-store:
        condition: service_healthy
    ports:
      - 5001:5000
    env_file:
      - ./.env
    environment:
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
      MLFLOW_ARTIFACT_STORE_URI: ${MLFLOW_ARTIFACT_STORE_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    command:
      - /bin/sh
      - -c
      - |
        mc config host add mlflowminio ${MLFLOW_S3_ENDPOINT_URL} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
        mc mb --ignore-existing mlflowminio/mlflow &&
        mlflow server \
        --default-artifact-root ${MLFLOW_ARTIFACT_STORE_URI} \
        --host 0.0.0.0
    networks:
      - app_network


networks:
  app_network:
    external: true